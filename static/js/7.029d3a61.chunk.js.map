{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","ComicsList","comicsList","setComicsList","useState","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","_jsxs","className","children","arr","items","map","item","i","Link","to","concat","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","ComicsPage","_Fragment","Helmet","name","content","AppBanner","img","display","width","height","objectFit","margin","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_baseCharacterOffset","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","pageCount","language","textObjects","prices","getAllCharacters","res","data","results","getCharacter","getComic","getCharacterByName","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.029d3a61.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n    \n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) ended = true;\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li \n                className=\"comics__item\"\n                key={i}>\n                    <Link to={`./${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className='comics__item-img'/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className='comics__list'>\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n            className='button button__main button__long'\n            disabled={newItemLoading}\n            style={{'display': comicsEnded ? 'none' : 'block'}}\n            onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Page with list of our comics\"\r\n          />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img src={img} alt=\"Error\" style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\r\n  const {request, clearError, process, setProcess} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=6ee25e191639a01dff88c6912dd17f12';\r\n  const _baseCharacterOffset = 210;\r\n\r\n  const getAllCharacters = async (/*limit = 9,*/ offset = _baseCharacterOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=${9/*limit*/}&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'Desciription about this character was not found.',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    }\r\n  }\r\n\r\n  const getAllComics = async (/*limit = 9,*/ offset = _baseCharacterOffset) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=${8/*limit*/}&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description.',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n    }\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  return {\r\n    clearError, \r\n    process,\r\n    setProcess,\r\n    getAllCharacters, \r\n    getCharacter, \r\n    getAllComics, \r\n    getComic, \r\n    getCharacterByName\r\n  };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n    \r\n    setProcess('loading');\r\n\r\n    try{\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if(!response.ok){\r\n        throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    } catch(e){\r\n      setProcess('error');\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return {request, clearError, process ,setProcess};\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}